name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request: [ main ]

env:
  TEST_TAG: dmitronik/wordpress:test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v2
      with:
        context: ./wordpress/
        load: true
        tags: ${{ env.TEST_TAG }}
		
    - name: Test
      run: docker run --rm ${{ env.TEST_TAG }}
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
          context: ./wordpress/
          push: true
          tags: dmitronik/wordpress:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME : ${{ secrets.EC2_PROD_HOSTNAME  }}
          USER_NAME : ${{ secrets.EC2_PROD_USER_NAME  }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            cd /home/ubuntu/App/DevOps-experience/wordpress &&
            sh -c "
              if [ -s compose-production.yml ]; then
                docker compose -f compose-production.yml down
              fi
            "
            git fetch origin &&
            git reset --hard origin/main
            docker compose -f compose-production.yml up -d --build
          '



